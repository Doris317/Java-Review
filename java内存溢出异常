
1、java堆内存溢出：
	堆内存最大值和最小值得设置：-Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError：限制内存为20M, -XX:+HeapDumpOnOutOfMemoryError参数是让虚拟机在出现内存溢出异常时Dump出当前的内存堆转储快照以便事后进行分析。
	出现异常时，根据快照先分清楚是内存泄漏还是内存溢出：
	内存溢出时：利用工具查看泄漏对象到GC root的引用链，即查出该泄漏对象是通过怎样的路径关联到GC root以致于垃圾回收器无法回收其内存，然后准确定位到内存泄漏的代码位置。
	内存溢出:即内存中的对象是需要保存的。可以查看堆内存的设置参数与机器物理内存比较，看是否可以调大；从代码上check是否存在某些对象的生命周期过长，持有状态时间过长等情况，尝试减少程序运行期间的内存消耗。
2、虚拟机栈和本地方法栈上的内存溢出
	-Xoss参数：设置本地方法栈的大小
	-Xss参数：设置虚拟机栈大小（HotSpot虚拟机不区分虚拟机栈和本地方法栈，所以只有-Xss参数来设置栈容量。）
	* 在单线程的情况下，无论是由于栈帧太大还是虚拟机栈容量太小，抛出的都是StackOverflowError异常。
	*多线程的情况下，不断的建立线程会导致程序抛出OutOfMemoryError溢出异常。此时，如果不能减少线程数也不能更换64位虚拟机时，只能通过减少最大堆和减少栈容量来获取更多线程。
3、方法区和运行时常量池的内存溢出
	-Xx: PermSize=10M -Xx: MaxPermSize= 10M 限制了常量池的容量（JDK1.7以前常量是分配在永久代中的，而JDK1.7开始去永久代）
4、本机直接内存溢出
	-Xx:MaxDirectMemorySize=10M指定，如果不指定时，默认与java堆最大值（-Xmx）一样。
	该内存区域出现内存的一个明显特征是：Heap Dump文件中不会看见明显异常。即如果抛出OOM异常之后Dump文件很小且程序中直接或者间接地使用了NIO类，那可以考虑是不是直接内存溢出。

	
	
